'use client';

import { useEffect, useMemo, useRef, useState } from 'react';
import BackBtn from '../../../components/BackBtn';
import PROMPT from './prompt';

type Msg = { role: 'system' | 'user' | 'assistant'; content: string };

export default function CinemaConcierge() {
  const [messages, setMessages] = useState<Msg[]>([
    { role: 'system', content: PROMPT },
    { role: 'assistant', content: '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–µ–≥–æ–¥–Ω—è: —Ñ–∏–ª—å–º –∏–ª–∏ —Å–µ—Ä–∏–∞–ª?' },
  ]);
  const [input, setInput] = useState('');
  const [loading, setLoading] = useState(false);
  const [uploading, setUploading] = useState(false);
  const [showAttach, setShowAttach] = useState(false);

  const listRef = useRef<HTMLDivElement>(null);
  const galleryRef = useRef<HTMLInputElement>(null);
  const cameraRef = useRef<HTMLInputElement>(null);
  const anyFileRef = useRef<HTMLInputElement>(null);

  useEffect(() => {
    const w: any = window;
    try { w?.Telegram?.WebApp?.ready?.(); w?.Telegram?.WebApp?.expand?.(); } catch {}
  }, []);
  useEffect(() => { listRef.current?.scrollTo({ top: 9e9, behavior: 'smooth' }); }, [messages, loading, uploading, showAttach]);

  // –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º ?id= –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è Pro –Ω–∞ –±—ç–∫–µ
  const idSuffix = useMemo(() => {
    try {
      const u = new URL(window.location.href);
      const id = u.searchParams.get('id');
      return id ? `?id=${encodeURIComponent(id)}` : '';
    } catch { return ''; }
  }, []);

  async function send() {
    const text = input.trim();
    if (!text || loading) return;

    setInput('');
    const next = [...messages, { role: 'user', content: text } as Msg];
    setMessages(next);
    setLoading(true);

    try {
      const history = next.filter(m => m.role !== 'system').slice(-20);

      const r = await fetch('/api/assistant/ask' + idSuffix, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ prompt: text, history }),
      });

      const data = await r.json();

      if (data?.ok) {
        const reply = String(data.answer || '').trim();
        setMessages(m => [...m, { role: 'assistant', content: reply || '–ì–æ—Ç–æ–≤–æ. –ü—Ä–æ–¥–æ–ª–∂–∏–º?' }]);
      } else if (data?.error === 'FREE_LIMIT_REACHED') {
        const msg = `–ò—Å—á–µ—Ä–ø–∞–Ω –¥–Ω–µ–≤–Ω–æ–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ª–∏–º–∏—Ç (${data?.freeLimit ?? 0}). –û—Ñ–æ—Ä–º–∏—Ç–µ Pro –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞.`;
        setMessages(m => [...m, { role: 'assistant', content: msg }]);
      } else {
        setMessages(m => [...m, { role: 'assistant', content: '–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑?' }]);
      }
    } catch {
      setMessages(m => [...m, { role: 'assistant', content: '–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑?' }]);
    } finally {
      setLoading(false);
    }
  }

  // ===== –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ (–≥–∞–ª–µ—Ä–µ—è / –∫–∞–º–µ—Ä–∞ / –ª—é–±—ã–µ) =====
  async function handleFiles(fileList: FileList | null, source: 'gallery'|'camera'|'any') {
    const file = fileList?.[0];
    if (!file) return;
    setShowAttach(false);
    setUploading(true);

    // –ü–∏—à–µ–º ¬´—é–∑–µ—Ä—Å–∫–æ–µ¬ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ñ–∞–π–ª–∞
    setMessages(m => [...m, { role: 'user', content: `üìé ${source === 'camera' ? '–°–Ω–∏–º–æ–∫' : '–§–∞–π–ª'}: ${file.name}` }]);

    try {
      const fd = new FormData();
      fd.append('file', file);
      // @ts-ignore
      const initData = window?.Telegram?.WebApp?.initData || '';

      const res = await fetch('/api/upload-image' + idSuffix, {
        method: 'POST',
        body: fd,
        headers: { 'X-Tg-Init-Data': initData },
      });

      const data = await res.json().catch(() => ({} as any));

      if (!res.ok) throw new Error('Upload failed');

      const url = data?.url || '';
      const fileId = data?.fileId || '';

      // –ü—É—à–∏–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—Å–∫–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ + –ø—Ä–µ–≤—å—é (markdown-like)
      const confirmation =
        (url
          ? `‚úÖ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ.\n${url}`
          : `‚úÖ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ${fileId ? ` (id: ${fileId})` : ''}.`) +
        `\n–û–ø–∏—à–∏—Ç–µ, —á—Ç–æ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –≤–∞–∂–Ω–æ, –∏ —è —É—á—Ç—É —ç—Ç–æ –≤ –ø–æ–¥–±–æ—Ä–µ.`;

      setMessages(m => [...m, { role: 'assistant', content: confirmation }]);
    } catch {
      setMessages(m => [...m, { role: 'assistant', content: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª. –ü–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑?' }]);
    } finally {
      setUploading(false);
      if (galleryRef.current) galleryRef.current.value = '';
      if (cameraRef.current) cameraRef.current.value = '';
      if (anyFileRef.current) anyFileRef.current.value = '';
    }
  }

  return (
    <main style={{ padding: 20, maxWidth: 800, margin: '0 auto', display: 'grid', gap: 12 }}>
      <BackBtn fallback="/home/pro" />
      <h1 style={{ textAlign: 'center' }}>üé¨ –ü–æ–¥–±–æ—Ä —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞</h1>
      <p style={{ textAlign: 'center', opacity: .75, marginTop: -4 }}>
        –ö–∏–Ω–æ–∫–æ–Ω—Å–µ—Ä–∂ –∑–∞–¥–∞—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –ø–æ–¥–±–µ—Ä—ë—Ç –∏–¥–µ–∞–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã.
      </p>

      <div
        ref={listRef}
        style={{
          border: '1px solid var(--border)',
          borderRadius: 14,
          background: '#121722',
          padding: 12,
          height: '54vh',
          overflow: 'auto',
          position: 'relative'
        }}
      >
        {messages.filter(m => m.role !== 'system').map((m, i) => (
          <div key={i} style={{ margin: '10px 0', display: 'flex', justifyContent: m.role === 'user' ? 'flex-end' : 'flex-start' }}>
            <div
              style={{
                maxWidth: '82%',
                padding: '10px 12px',
                borderRadius: 12,
                lineHeight: 1.5,
                background: m.role === 'user' ? '#24304a' : '#1a2132',
                border: '1px solid #2b3552',
                whiteSpace: 'pre-wrap',
              }}
            >
              {m.content}
            </div>
          </div>
        ))}
        {(loading || uploading) && <div style={{ opacity: .6, fontSize: 12, padding: '6px 2px' }}>
          {uploading ? '–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞‚Ä¶' : '–ò–ò –ø–µ—á–∞—Ç–∞–µ—Ç‚Ä¶'}
        </div>}
      </div>

      {/* –í–í–û–î + –ü–õ–Æ–°–ò–ö */}
      <div style={{ display: 'flex', gap: 8, alignItems: 'center', position: 'relative' }}>
        {/* –ü–õ–Æ–°–ò–ö */}
        <button
          type="button"
          onClick={() => setShowAttach(v => !v)}
          aria-label="–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å"
          style={{
            width: 42, height: 42, borderRadius: 12,
            border: '1px solid var(--border)', background: '#121722',
            display: 'grid', placeItems: 'center', fontSize: 22, lineHeight: 1
          }}
        >+</button>

        {/* –ú–ï–ù–Æ –ü–†–ò–ö–†–ï–ü–õ–ï–ù–ò–Ø */}
        {showAttach && (
          <div
            style={{
              position: 'absolute',
              bottom: 50,
              left: 0,
              background: '#101521',
              border: '1px solid #2b3552',
              borderRadius: 14,
              padding: 10,
              width: 260,
              boxShadow: '0 12px 40px rgba(0,0,0,.5)',
              zIndex: 5
            }}
          >
            <div
              role="button"
              onClick={() => galleryRef.current?.click()}
              style={{ padding: '10px 12px', borderRadius: 10, cursor: 'pointer' }}
            >üñºÔ∏è –ú–µ–¥–∏–∞—Ç–µ–∫–∞</div>
            <div
              role="button"
              onClick={() => cameraRef.current?.click()}
              style={{ padding: '10px 12px', borderRadius: 10, cursor: 'pointer' }}
            >üì∑ –°–Ω—è—Ç—å —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ</div>
            <div
              role="button"
              onClick={() => anyFileRef.current?.click()}
              style={{ padding: '10px 12px', borderRadius: 10, cursor: 'pointer' }}
            >üìÅ –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã</div>
          </div>
        )}

        {/* –°–ö–†–´–¢–´–ï INPUT‚Äô—ã */}
        <input
          ref={galleryRef}
          type="file"
          accept="image/*,video/*"
          multiple={false}
          style={{ display: 'none' }}
          onChange={(e) => handleFiles(e.target.files, 'gallery')}
        />
        <input
          ref={cameraRef}
          type="file"
          accept="image/*,video/*"
          capture="environment"  // –Ω–∞–º–µ–∫–∞–µ–º –æ—Ç–∫—Ä—ã—Ç—å –∫–∞–º–µ—Ä—É
          multiple={false}
          style={{ display: 'none' }}
          onChange={(e) => handleFiles(e.target.files, 'camera')}
        />
        <input
          ref={anyFileRef}
          type="file"
          multiple={false}
          style={{ display: 'none' }}
          onChange={(e) => handleFiles(e.target.files, 'any')}
        />

        {/* –ü–û–õ–ï –í–í–û–î–ê */}
        <input
          value={input}
          onChange={e => setInput(e.target.value)}
          onKeyDown={e => { if (e.key === 'Enter' && !e.shiftKey) { e.preventDefault(); send(); } }}
          placeholder="–û–ø–∏—à–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –∂–∞–Ω—Ä—ã, –ø–ª–∞—Ç—Ñ–æ—Ä–º—É‚Ä¶"
          style={{
            flex: 1,
            padding: '12px 12px',
            borderRadius: 12,
            border: '1px solid var(--border)',
            background: '#121722',
            color: 'var(--fg)',
          }}
        />
        <button onClick={send} disabled={loading || !input.trim()} className="list-btn" style={{ padding: '0 16px' }}>
          –û—Ç–ø—Ä–∞–≤–∏—Ç—å
        </button>
      </div>
    </main>
  );
}
