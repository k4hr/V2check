/* path: app/pro/page.tsx */
'use client';

import Link from 'next/link';
import type { Route } from 'next';
import { useEffect, useMemo } from 'react';
import { readLocale, STRINGS, type Locale } from '@/lib/i18n';
import { detectPlatform } from '@/lib/platform';

function setWelcomedCookie() {
  try {
    // SameSite=None; Secure ‚Äî —á—Ç–æ–±—ã –∫—É–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ –∂–∏–ª–∞ –≤ webview
    document.cookie = `welcomed=1; Path=/; Max-Age=${60 * 60 * 24 * 365}; SameSite=None; Secure`;
  } catch {}
}

export default function ProSelectPage() {
  const locale: Locale = readLocale();
  const S = STRINGS[locale];

  // –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∫–∞—Ä—Ç–æ—á–µ–∫
  const L: Record<Locale, {
    choosePlan: string;
    compareAndPay: string;
    proSub: string;
    proPlusSub: string;
  }> = {
    ru: {
      choosePlan: '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É',
      compareAndPay: '–°—Ä–∞–≤–Ω–∏—Ç–µ –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –∫ –æ–ø–ª–∞—Ç–µ',
      proSub: '–ü–æ–ø—Ä–æ–±—É–π ‚Äî –±—ã—Å—Ç—Ä—ã–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
      proPlusSub: '–£–≥–ª—É–±–∏—Å—å ‚Äî –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏ –ø–æ–≤—ã—à–µ–Ω–Ω—ã–µ –ª–∏–º–∏—Ç—ã',
    },
    en: {
      choosePlan: 'Choose a plan',
      compareAndPay: 'Compare and proceed to payment',
      proSub: 'Try fast daily tools',
      proPlusSub: 'Go deeper ‚Äî advanced scenarios and higher limits',
    },
    uk: {
      choosePlan: '–û–±–µ—Ä—ñ—Ç—å –ø—ñ–¥–ø–∏—Å–∫—É',
      compareAndPay: '–ü–æ—Ä—ñ–≤–Ω—è–π—Ç–µ –π –ø–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ –æ–ø–ª–∞—Ç–∏',
      proSub: '–°–ø—Ä–æ–±—É–π—Ç–µ ‚Äî —à–≤–∏–¥–∫—ñ —â–æ–¥–µ–Ω–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏',
      proPlusSub: '–ó–∞–≥–ª–∏–±—Ç–µ—Å—è ‚Äî —Ä–æ–∑—à–∏—Ä–µ–Ω—ñ —Å—Ü–µ–Ω–∞—Ä—ñ—ó —Ç–∞ –ø—ñ–¥–≤–∏—â–µ–Ω—ñ –ª—ñ–º—ñ—Ç–∏',
    },
    be: {
      choosePlan: '–ê–±—è—Ä—ã—Ü–µ –ø–∞–¥–ø—ñ—Å–∫—É',
      compareAndPay: '–ü–∞—Ä–∞—û–Ω–∞–π—Ü–µ —ñ –ø–µ—Ä–∞–π–¥–∑—ñ—Ü–µ –¥–∞ –∞–ø–ª–∞—Ç—ã',
      proSub: '–ü–∞—Å–ø—Ä–∞–±—É–π—Ü–µ ‚Äî —Ö—É—Ç–∫—ñ—è —à—Ç–æ–¥–∑—ë–Ω–Ω—ã—è —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
      proPlusSub: '–ó–∞–≥–ª—ã–±—Ü–µ—Å—è ‚Äî –ø—Ä–∞—Å—É–Ω—É—Ç—ã—è —Å—Ü—ç–Ω–∞—Ä—ã—ñ —ñ –ø–∞–≤—ã—à–∞–Ω—ã—è –ª—ñ–º—ñ—Ç—ã',
    },
    kk: {
      choosePlan: '–ñ–∞–∑—ã–ª—ã–º–¥—ã —Ç–∞“£–¥–∞“£—ã–∑',
      compareAndPay: '–°–∞–ª—ã—Å—Ç—ã—Ä—ã–ø, —Ç”©–ª–µ–º–≥–µ ”©—Ç—ñ“£—ñ–∑',
      proSub: '“ö–æ–ª—ã“£—ã–∑–¥–∞ ‚Äî –∫“Ø–Ω–¥–µ–ª—ñ–∫—Ç—ñ –∂—ã–ª–¥–∞–º “õ“±—Ä–∞–ª–¥–∞—Ä',
      proPlusSub: '–¢–µ—Ä–µ“£—ñ—Ä–µ–∫ ‚Äî –∫–µ“£–µ–π—Ç—ñ–ª–≥–µ–Ω —Å—Ü–µ–Ω–∞—Ä–∏–π–ª–µ—Ä –∂”ô–Ω–µ –∂–æ“ì–∞—Ä—ã –ª–∏–º–∏—Ç—Ç–µ—Ä',
    },
    uz: {
      choosePlan: 'Obunani tanlang',
      compareAndPay: 'Taqqoslang va to‚Äòlovga o‚Äòting',
      proSub: 'Har kuni uchun tezkor vositalar',
      proPlusSub: 'Chuqurroq ‚Äî kengaytirilgan ssenariylar va yuqori limitlar',
    },
    ky: {
      choosePlan: '–ñ–∞–∑—ã–ª—É—É–Ω—É —Ç–∞–Ω–¥–∞“£—ã–∑',
      compareAndPay: '–°–∞–ª—ã—à—Ç—ã—Ä—ã–ø, —Ç”©–ª”©–º–≥”© ”©—Ç“Ø“£“Ø–∑',
      proSub: '–ö“Ø–Ω“Ø–º–¥“Ø–∫ —Ç–µ–∑ –∫—É—Ä–∞–ª–¥–∞—Ä',
      proPlusSub: '–¢–µ—Ä–µ“£–∏—Ä—ç—ç–∫ ‚Äî –∫–µ“£–µ–π—Ç–∏–ª–≥–µ–Ω —Å—Ü–µ–Ω–∞—Ä–∏–π–ª–µ—Ä –∂–∞–Ω–∞ –∂–æ–≥–æ—Ä—É –ª–∏–º–∏—Ç—Ç–µ—Ä',
    },
    fa: {
      choosePlan: 'ÿ∑ÿ±ÿ≠ ÿ±ÿß ÿßŸÜÿ™ÿÆÿßÿ® ⁄©ŸÜ€åÿØ',
      compareAndPay: 'ŸÖŸÇÿß€åÿ≥Ÿá ⁄©ŸÜ€åÿØ Ÿà ÿ®Ÿá Ÿæÿ±ÿØÿßÿÆÿ™ ÿ®ÿ±Ÿà€åÿØ',
      proSub: 'ÿßÿ®ÿ≤ÿßÿ±Ÿáÿß€å ÿ≥ÿ±€åÿπ ÿ±Ÿàÿ≤ÿßŸÜŸá',
      proPlusSub: 'ÿπŸÖ€åŸÇ‚Äåÿ™ÿ± ‚Äî ÿ≥ŸÜÿßÿ±€åŸàŸáÿß€å Ÿæ€åÿ¥ÿ±ŸÅÿ™Ÿá Ÿà ŸÖÿ≠ÿØŸàÿØ€åÿ™‚ÄåŸáÿß€å ÿ®€åÿ¥ÿ™ÿ±',
    },
    hi: {
      choosePlan: '‡§™‡•ç‡§≤‡§æ‡§® ‡§ö‡•Å‡§®‡•á‡§Ç',
      compareAndPay: '‡§§‡•Å‡§≤‡§®‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§≠‡•Å‡§ó‡§§‡§æ‡§® ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Å',
      proSub: '‡§§‡•á‡§ú‡§º ‡§¶‡•à‡§®‡§ø‡§ï ‡§ü‡•Ç‡§≤',
      proPlusSub: '‡§î‡§∞ ‡§ó‡§π‡§∞‡§æ‡§à ‚Äî ‡§â‡§®‡•ç‡§®‡§§ ‡§∏‡•Ä‡§®‡§æ‡§∞‡§ø‡§Ø‡•ã ‡§î‡§∞ ‡§Ö‡§ß‡§ø‡§ï ‡§≤‡§ø‡§Æ‡§ø‡§ü',
    },
  };

  // –ö—É–∫–∞ welcomed —Å—Ä–∞–∑—É, —á—Ç–æ–±—ã middleware –Ω–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–ª –Ω–∞–∑–∞–¥
  useEffect(setWelcomedCookie, []);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –æ–¥–∏–Ω —Ä–∞–∑ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
  const platform = useMemo(() => detectPlatform(), []);

  useEffect(() => {
    const w: any = window;
    try { document.documentElement.lang = locale; } catch {}

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    try {
      if (platform === 'telegram') {
        w?.Telegram?.WebApp?.ready?.();
        w?.Telegram?.WebApp?.expand?.();
      } else if (platform === 'vk') {
        const bridge = (w as any).vkBridge;
        if (bridge?.send) {
          bridge.send('VKWebAppInit').catch(() => {});
          bridge.send('VKWebAppExpand').catch(() => {});
        } else if (typeof w.VKWebAppInit === 'function') {
          w.VKWebAppInit();
          try { w.VKWebAppExpand?.(); } catch {}
        }
      }
    } catch {}
  }, [locale, platform]);

  // –•–≤–æ—Å—Ç –¥–ª—è —Å—Å—ã–ª–æ–∫: –ø—Ä–æ—Ç–∞—Å–∫–∏–≤–∞–µ–º welcomed=1 –∏ id (–µ—Å–ª–∏ –±—ã–ª)
  const linkSuffix = useMemo(() => {
    try {
      const u = new URL(window.location.href);
      const sp = new URLSearchParams(u.search);
      sp.set('welcomed', '1');
      const id = u.searchParams.get('id');
      if (id) sp.set('id', id);
      const s = sp.toString();
      return s ? `?${s}` : '?welcomed=1';
    } catch {
      return '?welcomed=1';
    }
  }, []);

  // –ë–∞–∑–∞ —Å—Å—ã–ª–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
  const base = platform === 'vk' ? '/pro/vk' : '/pro';

  return (
    <main className="lm-wrap">
      {/* –ù–∞–∑–∞–¥ –≤—Å–µ–≥–¥–∞ –Ω–∞ /home —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ö–≤–æ—Å—Ç–∞ */}
      <Link
        href={`/home${linkSuffix}` as Route}
        className="card"
        style={{ maxWidth: 140, padding: '10px 12px', marginBottom: 12, textDecoration: 'none' }}
      >
        ‚Üê {S.back}
      </Link>

      <h1 style={{ textAlign:'center' }}>{L[locale].choosePlan}</h1>
      <p className="lm-subtitle" style={{ textAlign:'center' }}>
        {L[locale].compareAndPay}
      </p>

      <div className="lm-grid" style={{ marginTop:16 }}>
        {/* Pro */}
        <Link
          href={`${base}/min${linkSuffix}` as Route}
          className="card card--pro"
          style={{ textDecoration:'none' }}
        >
          <span className="card__left">
            <span className="card__icon card__icon--pro">üì¶</span>
            <span>
              <div className="card__title">LiveManager Pro</div>
              <div className="card__subtitle">{L[locale].proSub}</div>
            </span>
          </span>
          <span className="card__chev">‚Ä∫</span>
        </Link>

        {/* Pro+ */}
        <Link
          href={`${base}/max${linkSuffix}` as Route}
          className="card card--proplus"
          style={{ textDecoration:'none' }}
        >
          <span className="card__left">
            <span className="card__icon card__icon--proplus">‚ú®</span>
            <span>
              <div className="card__title">LiveManager Pro+</div>
              <div className="card__subtitle">{L[locale].proPlusSub}</div>
            </span>
          </span>
          <span className="card__chev">‚Ä∫</span>
        </Link>
      </div>

      {/* --- –¢–∞–±–ª–∏—Ü–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è --- */}
      <section className="cmp">
        <h2 className="cmp__title">{S.compareTitle}</h2>

        <div className="cmp-grid">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div className="cell cell--head cell--label">{S.param}</div>
          <div className="cell cell--head">Pro</div>
          <div className="cell cell--head cell--proplus-head">Pro+</div>

          {/* –ú–æ–¥–µ–ª—å –ò–ò */}
          <div className="cell cell--label">{S.aiModel}</div>
          <div className="cell">ChatGPT 5 mini</div>
          <div className="cell cell--proplus">ChatGPT 5</div>

          {/* –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π */}
          <div className="cell cell--label">{S.unlimited}</div>
          <div className="cell"><span className="chip chip--no">‚õî</span></div>
          <div className="cell cell--proplus"><span className="chip chip--ok">‚úÖ</span></div>

          {/* –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏ */}
          <div className="cell cell--label">{S.filesWork}</div>
          <div className="cell"><span className="chip chip--no">‚õî</span></div>
          <div className="cell cell--proplus"><span className="chip chip--ok">‚úÖ</span></div>

          {/* –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ */}
          <div className="cell cell--label">{S.advancedScenarios}</div>
          <div className="cell"><span className="chip chip--no">‚õî</span></div>
          <div className="cell cell--proplus"><span className="chip chip--ok">‚úÖ</span></div>

          {/* –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –æ—á–µ—Ä–µ–¥–∏ */}
          <div className="cell cell--label">{S.queuePriority}</div>
          <div className="cell"><span className="chip chip--no">‚õî</span></div>
          <div className="cell cell--proplus"><span className="chip chip--ok">‚úÖ</span></div>

          {/* –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤ */}
          <div className="cell cell--label">{S.saveAnswers}</div>
          <div className="cell"><span className="chip chip--no">‚õî</span></div>
          <div className="cell cell--proplus"><span className="chip chip--ok">‚úÖ</span></div>
        </div>
      </section>

      <style jsx>{`
        .lm-wrap { padding: 20px; max-width: 780px; margin: 0 auto; }
        .lm-subtitle { opacity: .7; margin-top: 6px; }
        .lm-grid { display: grid; gap: 12px; }

        .card {
          display: flex; align-items: center; justify-content: space-between;
          padding: 16px; border-radius: 14px;
          background: #161b25; border: 1px solid rgba(255,255,255,.08);
          color: inherit; box-shadow: 0 6px 24px rgba(0,0,0,.25);
          transition: transform .12s ease, box-shadow .12s ease, border-color .12s ease;
          -webkit-tap-highlight-color: transparent;
        }
        .card:hover { transform: translateY(-1px); }
        .card__left { display: flex; gap: 12px; align-items: center; }
        .card__icon {
          width: 36px; height: 36px; display: grid; place-items: center; font-size: 20px;
          background: rgba(255,255,255,.06); border-radius: 10px;
        }
        .card__title { font-weight: 800; font-size: 16px; line-height: 1.1; }
        .card__subtitle { opacity: .78; font-size: 13px; margin-top: 2px; }
        .card__chev { opacity: .6; font-size: 22px; }

        /* Pro */
        .card--pro {
          border-color: rgba(91, 140, 255, .45);
          box-shadow: 0 10px 30px rgba(91, 140, 255, .16), inset 0 0 0 1px rgba(91, 140, 255, .10);
        }
        .card__icon--pro {
          background: radial-gradient(120% 120% at 20% 20%, rgba(120,150,255,.45), rgba(120,150,255,.08) 60%, rgba(255,255,255,.05));
        }

        /* Pro+ –∫–∞—Ä—Ç–æ—á–∫–∞ (–∑–æ–ª–æ—Ç–æ) */
        .card--proplus {
          border-color: rgba(255, 191, 73, .45);
          box-shadow: 0 10px 30px rgba(255,191,73,.18), inset 0 0 0 1px rgba(255,191,73,.10);
        }
        .card__icon--proplus {
          background: radial-gradient(120% 120% at 20% 20%, rgba(255,210,120,.55), rgba(255,210,120,.10) 60%, rgba(255,255,255,.05));
        }

        /* ===== –¢–∞–±–ª–∏—Ü–∞ ===== */
        .cmp { margin-top: 18px; }
        .cmp__title { margin: 10px 0 10px; text-align: center; font-size: 18px; opacity: .95; }

        .cmp-grid {
          border: 1px solid rgba(255,255,255,.08);
          border-radius: 14px;
          overflow: hidden;
          background: #111624;
          display: grid;
          grid-template-columns: minmax(160px, 1.4fr) 1fr 1fr;
        }

        /* –¶–µ–Ω—Ç—Ä–æ–≤–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ */
        .cell {
          padding: 12px;
          font-size: 14px;
          border-bottom: 1px solid rgba(255,255,255,.06);
          display: flex;
          align-items: center;
          justify-content: center;
          text-align: center;
          min-height: 54px;
          position: relative;
        }
        .cell--label { background: rgba(255,255,255,.02); font-weight: 600; }
        .cell--head  { font-weight: 800; background: rgba(255,255,255,.04); }

        /* –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ */
        .cmp-grid .cell:nth-child(3n+1),
        .cmp-grid .cell:nth-child(3n+2) { border-right: 1px solid rgba(255,255,255,.06); }
        .cmp-grid .cell:nth-last-child(-n+3) { border-bottom: none; }

        /* –ö–æ–ª–æ–Ω–∫–∞ Pro+ ‚Äî —Ñ–æ–Ω –∫–∞–∫ —É ¬´–∑–æ–ª–æ—Ç–æ–π¬ª –∫–Ω–æ–ø–∫–∏ */
        .cell--proplus,
        .cell--proplus-head {
          background: linear-gradient(135deg,#2f2411 0%, #3b2c12 45%, #4b3513 100%);
          color: #fff;
        }
        .cell--proplus-head { font-weight: 800; }

        /* –ß–∏–ø—ã */
        .chip {
          display: inline-flex; align-items: center; justify-content: center;
          min-width: 24px; height: 24px; padding: 0 8px;
          border-radius: 999px; font-size: 13px; line-height: 24px;
          border: 1px solid transparent;
          position: relative; z-index: 1;
        }
        .chip--ok {
          background: rgba(80,200,120,.30);
          border-color: rgba(80,200,120,.55);
          color: #dfffe6;
        }
        .chip--no {
          background: rgba(255,90,90,.22);
          border-color: rgba(255,90,90,.45);
          color: #ffd6d6;
        }

        @media (max-width: 420px) {
          .cell { padding: 10px; font-size: 13px; min-height: 48px; }
          .cmp-grid { grid-template-columns: minmax(120px, 1.2fr) 1fr 1fr; }
        }
      `}</style>
    </main>
  );
}
