import crypto from 'crypto';
export function verifyInitData(initData: string, botToken: string){ if(!initData||!botToken) return {ok:false}; const params=new URLSearchParams(initData); let user=params.get('user'); let auth_date=params.get('auth_date'); const hash=params.get('hash'); if(!hash) return {ok:false}; const secret = crypto.createHmac('sha256','WebAppData').update(botToken).digest(); const entries=[] as string[]; if(user) entries.push(`user=${user}`); if(auth_date) entries.push(`auth_date=${auth_date}`); for(const [k,v] of params.entries()){ if(k!=='user' && k!=='auth_date' && k!=='hash') entries.push(`${k}=${v}`);} entries.sort(); const data=entries.join('\n'); const h=crypto.createHmac('sha256',secret).update(data).digest('hex'); if(h!==hash) return {ok:false}; return {ok:true, payload:{user: user? JSON.parse(user):undefined, auth_date: auth_date? Number(auth_date):undefined}}; }
