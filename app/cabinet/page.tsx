'use client';
import { useEffect, useState } from 'react';
import TopBar from '../components/TopBar';
import { getSub, isPro } from '../lib/subscription';
import { getFavs } from '../lib/favorites';

const RECO = ['–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –∫–æ–¥–µ–∫—Å –†–§','–£–≥–æ–ª–æ–≤–Ω—ã–π –∫–æ–¥–µ–∫—Å –†–§','–ö–æ–ê–ü –†–§','–ù–∞–ª–æ–≥–æ–≤—ã–π –∫–æ–¥–µ–∫—Å –†–§'];

function daysLeft(ts:number){ const diff = ts - Date.now(); return Math.max(0, Math.ceil(diff/(24*60*60*1000))); }

export default function Cabinet(){
  const [pro,setPro]=useState(false);
  const [until,setUntil]=useState(0);
  const [favs,setFavs]=useState<string[]>([]);

  useEffect(()=>{
    setPro(isPro());
    const s=getSub(); setUntil(s.expiresAt);
    setFavs(getFavs());
  },[]);

  const left = daysLeft(until);

  return (
    <main>
      <TopBar />
      <div style={{padding:16}} className="grid">
        <div className="card">
          <h1 style={{margin:'0 0 6px'}}>üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h1>
          {pro ? (
            <div>–°—Ç–∞—Ç—É—Å: <b>Pro –∞–∫—Ç–∏–≤–Ω–æ</b> ‚Äî –æ—Å—Ç–∞–ª–æ—Å—å {left} –¥–Ω.<br/><span className="muted">–¥–æ {new Date(until).toLocaleString()}</span></div>
          ) : (
            <div>–°—Ç–∞—Ç—É—Å: <b>–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø</b> ‚Äî 2 –¥–æ–∫—É–º–µ–Ω—Ç–∞/–¥–µ–Ω—å. <a href="/pro" style={{color:'#8ab4ff'}}>–û—Ñ–æ—Ä–º–∏—Ç—å Pro</a></div>
          )}
          {!pro && <div className="card" style={{marginTop:12}}>
            <b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ:</b> –û—Ñ–æ—Ä–º–∏—Ç–µ Pro, —á—Ç–æ–±—ã —á–∏—Ç–∞—Ç—å –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.
            <div style={{marginTop:8}}><a className="btn primary" href="/pro">–ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É</a></div>
          </div>}
        </div>

        <div className="card">
          <h2 style={{margin:'0 0 6px'}}>‚òÖ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ</h2>
          {favs.length===0 ? <div className="muted">–ü—É—Å—Ç–æ. –î–æ–±–∞–≤–ª—è–π—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É ‚òÜ.</div> :
            <div className="grid">{favs.map(id=>(<a key={id} className="btn" href={`/content/laws/${id}.html`}>{id}</a>))}</div>}
        </div>

        <div className="card">
          <h2 style={{margin:'0 0 6px'}}>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h2>
          <div className="grid cols2">
            {RECO.map((t,i)=>(<div key={i} className="btn">{t}</div>))}
          </div>
        </div>
      </div>
    </main>
  );
}
